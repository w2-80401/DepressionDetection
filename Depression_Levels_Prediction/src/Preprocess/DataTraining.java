/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Preprocess;

import Master.Dbconn;
import Master.MasterPage;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class DataTraining extends javax.swing.JFrame {

    String rt = "";
    private File imagefile;
    String arroba = "";
    String hashtag = "";
    String slang = "";
    public static int topiccounts, topiccountsteen;
    String panctuation = "", panctuation1 = "";
    String url = "";
    //String msg1 = "A", msg2 = "T";
    int topiccount = 0;
    public static String foldname;
    String topicmsg;
    //  String gender = "";
    String twiteerid = null;
    public static ArrayList<String> Listdata = new ArrayList<>();
    public static double tho = 22.22, tho1 = 44.22;
    public static ArrayList<Integer> listlines = new ArrayList<>();
    public static String username, userScreenName, createddate, profilename, location, language, friendcount, followerscount, statuscount, listedcount, timezone, utcoffset, latitude, longitude, tweentpost;
    public static ArrayList<String> fold3 = new ArrayList<>();
    public static int ftotal = 0,
            fcount1 = 0,
            fcount2 = 0,
            fcount3 = 0,
            fcount4 = 0,
            fcount5 = 0,
            fcount6 = 0,
            fcount7 = 0,
            fcount8 = 0,
            fcount9 = 0;
    public static ArrayList<String> rulelist = new ArrayList<>();
    public static String tweets, gender, tweetspost;
    public static String msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9;
    public static int tweetsno, retweets, age;
    public static double Friends_Count, Followers_Count;
    public static String latitudes, longitudes, locations;

    public DataTraining() {
        initComponents();
        jButton6.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        img_name = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 153, 153));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        img_name.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        img_name.setName(""); // NOI18N
        jPanel1.add(img_name);
        img_name.setBounds(250, 80, 220, 30);

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton4.setText("Browse");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(480, 80, 90, 30);

        jButton6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton6.setText("Generate");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(250, 150, 130, 30);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText("Select Data File");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(100, 80, 140, 22);

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(410, 150, 110, 30);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Create Dataset");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(254, 254, 254))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        try {
            JFileChooser chooser = new JFileChooser("F:\\BE2019-2020\\AniketJSPM\\DataSet");
            int result = chooser.showOpenDialog(null);

            if (result == JFileChooser.APPROVE_OPTION) {
                imagefile = chooser.getSelectedFile();
                jButton6.setEnabled(true);
            }

            img_name.setText(imagefile.getAbsolutePath());
        } catch (HeadlessException ex) {
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
      int flag=0;
        int val= Integer.parseInt(JOptionPane.showInputDialog("Enter Fold Validation (5,10,15 etc)"));
      if(val==5) {foldof15(img_name.getText());flag=1;}
       if(val==10) {foldof10(img_name.getText());flag=1;}
       if(val==15) {foldof15(img_name.getText());flag=1;}
       if(flag==0){
       JOptionPane.showMessageDialog(rootPane, "Invalid Selection");}
       else {
        JOptionPane.showMessageDialog(rootPane, "Data Uploading Success");
       }
    }//GEN-LAST:event_jButton6ActionPerformed
public static void foldof5(String input)
{
try {
              listlines.clear();
            Listdata.clear();
             String infile = input;
            FileReader fr = new FileReader(infile);
            BufferedReader br1 = new BufferedReader(fr);
              String datas;
           
            double lineno = 0;
            while ((datas = br1.readLine()) != null) {
                lineno++;
                 Listdata.add(datas);
 }// while loop end
             double for70= ((lineno/100)*70.0);
              Dbconn db = new Dbconn();
              Connection conn = Dbconn.conn();
              Statement statement1= conn.createStatement();
               Statement statement2= conn.createStatement();
               System.out.println("total"+lineno);
                System.out.println("70%"+for70);
            for (int kk=0; kk<Listdata.size();kk++)
            {
                String[] parts = Listdata.get(kk).toString().split("#");
                if(kk<for70)
                {
                            String sql = "insert into trainingdata70 values (?,?,?)";
                            PreparedStatement pdt = conn.prepareStatement(sql);
                            pdt.setString(1, parts[0]);
                            pdt.setString(2, parts[1]);
                            pdt.setString(3, parts[2]);
                             int n1 = pdt.executeUpdate();
                            System.out.println("Train inserted");
                          }
                else
                {
                     String sql = "insert into testingdata30 values (?,?,?)";
                            PreparedStatement pdt = conn.prepareStatement(sql);
                            pdt.setString(1, parts[0]);
                            pdt.setString(2, parts[1]);
                            pdt.setString(3, parts[2]);
                             int n1 = pdt.executeUpdate();
                            System.out.println("Test inserted");
                            
                }
              
            }
        } catch (Exception ex) {
            System.out.println(ex);
        }
}
public static void foldof10(String input)
{
try {
              listlines.clear();
            Listdata.clear();
             String infile = input;
            FileReader fr = new FileReader(infile);
            BufferedReader br1 = new BufferedReader(fr);
              String datas;
           
            double lineno = 0;
            while ((datas = br1.readLine()) != null) {
                lineno++;
                 Listdata.add(datas);
 }// while loop end
             double for67= ((lineno/100)*67.0);
              Dbconn db = new Dbconn();
              Connection conn = Dbconn.conn();
              Statement statement1= conn.createStatement();
               Statement statement2= conn.createStatement();
               System.out.println("total"+lineno);
                System.out.println("70%"+for67);
            for (int kk=0; kk<Listdata.size();kk++)
            {
                String[] parts = Listdata.get(kk).toString().split("#");
                if(kk<for67)
                {
                            String sql = "insert into trainingdata70 values (?,?,?)";
                            PreparedStatement pdt = conn.prepareStatement(sql);
                            pdt.setString(1, parts[0]);
                            pdt.setString(2, parts[1]);
                            pdt.setString(3, parts[2]);
                             int n1 = pdt.executeUpdate();
                            System.out.println("Train inserted");
                          }
                else
                {
                     String sql = "insert into testingdata30 values (?,?,?)";
                            PreparedStatement pdt = conn.prepareStatement(sql);
                            pdt.setString(1, parts[0]);
                            pdt.setString(2, parts[1]);
                            pdt.setString(3, parts[2]);
                             int n1 = pdt.executeUpdate();
                            System.out.println("Test inserted");
                            
                }
              
            }
        } catch (Exception ex) {
            System.out.println(ex);
        }
}
public static void foldof15(String input)
    {
     try {
              listlines.clear();
            Listdata.clear();
             String infile = input;
            FileReader fr = new FileReader(infile);
            BufferedReader br1 = new BufferedReader(fr);
              String datas;
           
            double lineno = 0;
            while ((datas = br1.readLine()) != null) {
                lineno++;
                 Listdata.add(datas);
 }// while loop end
   
             double for65= ((lineno/100)*65.0);
              Dbconn db = new Dbconn();
              Connection conn = Dbconn.conn();
              Statement statement1= conn.createStatement();
               Statement statement2= conn.createStatement();
               System.out.println("total"+lineno);
                System.out.println("65%"+for65);
            for (int kk=0; kk<Listdata.size();kk++)
            {
                String[] parts = Listdata.get(kk).toString().split("#");
                System.out.println("parts=>"+parts.length+"parts=>"+parts[0]+Listdata.get(kk));
                if(kk<for65)
                {
                            String sql = "insert into trainingdata70 values (?,?,?)";
                            PreparedStatement pdt = conn.prepareStatement(sql);
                            pdt.setString(1, parts[0]);
                            pdt.setString(2, parts[1]);
                            pdt.setString(3, parts[2]);
                             int n1 = pdt.executeUpdate();
                            System.out.println("Train inserted");
                          }
                else
                {
                     String sql = "insert into testingdata30 values (?,?,?)";
                            PreparedStatement pdt = conn.prepareStatement(sql);
                            pdt.setString(1, parts[0]);
                            pdt.setString(2, parts[1]);
                            pdt.setString(3, parts[2]);
                             int n1 = pdt.executeUpdate();
                            System.out.println("Test inserted");
                            
                }
              
            }
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MasterPage dc = new MasterPage();
        dc.show();
        this.hide();
    }//GEN-LAST:event_jButton1ActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataTraining.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataTraining().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField img_name;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
